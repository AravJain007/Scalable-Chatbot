apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: app-infrastructure
spec:
  replicas: 1  # Increase for better HA
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis-db
        image: redis # Using a specific version with Alpine for smaller footprint
        resources:
          requests:
            memory: "2Gi"
            cpu: "2"
          limits:
            memory: "4Gi"
            cpu: "4"
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-config
          mountPath: /etc/redis
        - name: redis-data
          mountPath: /data
        command: ["redis-server", "/etc/redis/redis.conf"]
        readinessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ["redis-cli", "ping"]
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
        - name: redis-config
          configMap:
            name: redis-config
        - name: redis-data
          hostPath:
            path: /home/arav/Desktop/Sarvam AI/data/redis-data
            type: DirectoryOrCreate

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: app-infrastructure
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: app-infrastructure
data:
  redis.conf: |
    maxmemory 3gb
    maxmemory-policy allkeys-lru
    save 900 1
    save 300 10
    save 60 10000
    appendonly yes
    appendfsync everysec

---
apiVersion: v1
kind: Service
metadata:
  name: redis-external
  namespace: app-infrastructure
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
      nodePort: 30379
  type: NodePort