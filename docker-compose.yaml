services:
  postgres:
    image: postgres
    container_name: postgres
    volumes:
      - ./data/postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=sarvam_litmus_test
      - POSTGRES_DB=yourappdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d yourappdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    mem_limit: 4g
    cpus: 4

  redis:
    image: redis
    container_name: redis
    command: redis-server /etc/redis/redis.conf
    volumes:
      - ./data/redis-data:/data
      - ./redis.conf:/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "6397:6379"
    restart: unless-stopped
    mem_limit: 4g
    cpus: 4

  ollama:
    image: ollama/ollama
    container_name: ollama
    volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - OLLAMA_KEEP_ALIVE=24h
    mem_limit: 8g
    cpus: 8
    restart: unless-stopped

  app:
    image: scalable-chatbot-app
    container_name: streamlit-app
    ports:
      - "8501:8501"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_started
      web-search:
        condition: service_started
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - OLLAMA_HOST=ollama
      - OLLAMA_PORT=11434
      - WEB_SEARCH_HOST=web-search
      - WEB_SEARCH_PORT=5069
      - SEARXNG_HOST=searxng
      - SEARXNG_PORT=8080
    mem_limit: 2g
    cpus: 4
    restart: unless-stopped

  web-search:
    image: web-search-agent
    container_name: web-search-agent
    build:
      context: ./web_search
      dockerfile: Dockerfile
    volumes:
      - ./data/scrapy-data:/data
    ports:
      - "5069:5069"
    environment:
      - SCRAPY_SETTINGS_MODULE=web_search.settings
      - MAX_DEPTH=2
      - SCRAPE_TIMEOUT=60
    mem_limit: 2g
    cpus: 2
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import requests; requests.get('http://localhost:5069/health')",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
    cap_add:
      - SYS_ADMIN # Required for browser sandboxing
    security_opt:
      - seccomp:unconfined # Bypass security restrictions for Playwright

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - ./qdrant-data:/qdrant/storage
      - ./models_cache:/models
    restart: unless-stopped

  searxng:
    image: searxng/searxng:latest
    container_name: searxng
    environment:
      - SEARXNG_PORT=8080
      - SEARXNG_BIND_ADDRESS=http://localhost:8081/
    ports:
      - "8080:8080"
    volumes:
      - ./my-instance/searxng:/etc/searxng
    restart: unless-stopped

volumes:
  ollama-data:
    external: true
